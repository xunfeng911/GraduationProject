{"version":3,"file":"static/webpack/static/development/pages/index.js.9a4fdfd62c59fef93630.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts';\n\nexport default class BackPage extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      histogramData: {}\n    }\n  }\n  componentDidMount() {\n    this.getOption();\n  }\n  getOption (date: string = '2019-01-20') {\n    fetch(`http://localhost:2827/back/data/${date}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then(res => res.json())\n    .then(res => {\n      console.log(res);\n      this.setState({\n        histogramData: {\n          backgroundColor: '#fff',\n          tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                  type: 'shadow'\n              }\n          },\n          legend: {\n              data: ['飞机场', '火车站', '高铁站'],\n              align: 'right',\n              right: 10,\n              textStyle: {\n                  color: \"#00265f\"\n              },\n              itemWidth: 10,\n              itemHeight: 10,\n              itemGap: 35\n          },\n          grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n          },\n          xAxis: [{\n              type: 'category',\n              data: res.data.times,\n              axisLine: {\n                  show: true,\n                  lineStyle: {\n                      color: \"#063374\",\n                      width: 1,\n                      type: \"solid\"\n                  }\n              },\n              axisTick: {\n                  show: false,\n              },\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: \"#00c7ff\",\n                  }\n              },\n          }],\n          yAxis: [{\n              type: 'value',\n              axisLabel: {\n                  formatter: '{value}'\n              },\n              axisTick: {\n                  show: false,\n              },\n              axisLine: {\n                  show: false,\n                  lineStyle: {\n                      color: \"#00c7ff\",\n                      width: 1,\n                      type: \"solid\"\n                  },\n              },\n              splitLine: {\n                  lineStyle: {\n                      color: \"#063374\",\n                  }\n              }\n          }],\n          series: [{\n              name: '飞机场',\n              type: 'bar',\n              data: res.data.plane,\n              barWidth: 10, //柱子宽度\n              barGap: 1, //柱子之间间距\n              itemStyle: {\n                  normal: {\n                      color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                          offset: 0,\n                          color: '#008cff'\n                      }, {\n                          offset: 1,\n                          color: '#005193'\n                      }]),\n                      opacity: 1,\n                  }\n              }\n          }, {\n              name: '火车站',\n              type: 'bar',\n              data: res.data.train,\n              barWidth: 10,\n              barGap: 1,\n              itemStyle: {\n                  normal: {\n                      color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                          offset: 0,\n                          color: '#00da9c'\n                      }, {\n                          offset: 1,\n                          color: '#007a55'\n                      }]),\n                      opacity: 1,\n                  }\n              }\n          }, {\n              name: '高铁站',\n              type: 'bar',\n              data: res.data.gaotiew,\n              barWidth: 10,\n              barGap: 1,\n              itemStyle: {\n                  normal: {\n                      color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                          offset: 0,\n                          color: '#c4e300'\n                      }, {\n                          offset: 1,\n                          color: '#728400'\n                      }]),\n                      opacity: 1,\n                  }\n              }\n          }]\n        }\n      })\n    });\n  }\n  render() {\n    return (\n      <>\n        <ReactEcharts\n          style={{minHeight: 600, background: '#fff', paddingTop: 12}}\n          option={this.state.histogramData}\n          notMerge={true}\n          lazyUpdate={true}\n        />\n      </>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAdA;AAqBA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AADA;AADA;AAhBA;AAsBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AARA;AADA;AANA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AARA;AADA;AANA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AARA;AADA;AANA;AAxGA;AADA;AA8HA;AACA;;;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA/JA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}