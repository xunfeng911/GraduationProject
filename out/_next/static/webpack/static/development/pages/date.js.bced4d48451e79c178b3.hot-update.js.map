{"version":3,"file":"static/webpack/static/development/pages/date.js.bced4d48451e79c178b3.hot-update.js","sources":["webpack:///./pages/date.tsx"],"sourcesContent":["import * as React from 'react';\nimport Router from 'next/router';\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts';\nimport Table from 'antd/lib/table';\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from  '@material-ui/core/Select';\nimport { routeRadiosData } from '../components/subscribeData';\nimport '../styles/back.css';\nimport Input from 'antd/lib/input';\nimport Button from 'antd/lib/button';\nimport Icon from 'antd/lib/icon';\nimport Highlighter from 'react-highlight-words';\n\n\nexport default class BackPage extends React.Component<any, any> {\n  searchInput: any;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      tableList: [],\n      selectDateOptions: [],\n      histogramData: {},\n      pieData: {},\n      selectDate: '',\n      searchText: '',\n      pageSet: {\n        total: 0,\n        pageSize: 20,\n        current: 0,\n        showTotal: (total: any) => <span>共{total}条</span>\n      }\n    }\n  }\n  componentDidMount() {\n    let status = window.sessionStorage.getItem('status');\n    if (status !== 'logined') {\n      Router.push({pathname: '/'});\n      window.location.href ='/';\n    }\n    // fetch('http://xuncs.cn:2827/back/times')\n    // .then(res => res.json())\n    // .then((res: any) => {\n    //   let options: string = [];\n    //   res.data.map((itm: any) => {\n    //     options.push(itm.date);\n    //   })\n    //   this.setState({selectDateOptions: options, selectDate: options[0]});\n    //   this.getOption(options[0]);\n    //   this.getTableData(1);\n    // })\n    let options = ['2019-01-18', '2019-01-19', '2019-01-20'];\n    this.setState({selectDateOptions: options, selectDate: options[0]}, () => {\n      this.getOption(options[0]);\n      this.getTableData(1);\n    });\n  }\n  getOption (date: string) {\n    fetch(`http://xuncs.cn:2827/back/data/${date}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then(res => res.json())\n    .then(res => {\n      let data = [\n        {name: '飞机场', value: res.data.plane.reduce((prev: number, curr: number) => prev + curr)},\n        {name: '火车站', value: res.data.train.reduce((prev: number, curr: number) => prev + curr)},\n        {name: '高铁站', value: res.data.gaotie.reduce((prev: number, curr: number) => prev + curr)}\n      ];\n      this.setState({\n        histogramData: {\n          backgroundColor: '#fff',\n          tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                  type: 'shadow'\n              }\n          },\n          legend: {\n              data: ['飞机场', '火车站', '高铁站'],\n              align: 'right',\n              right: 10,\n              itemWidth: 10,\n              itemHeight: 10,\n              itemGap: 35\n          },\n          grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n          },\n          xAxis: [{\n              type: 'category',\n              data: res.data.times,\n              axisLine: {\n                  show: true,\n              },\n              axisTick: {\n                  show: false,\n              },\n              axisLabel: {\n                  show: true\n              },\n          }],\n          yAxis: [{\n              type: 'value',\n              axisLabel: {\n                  formatter: '{value}'\n              },\n              axisTick: {\n                  show: false,\n              },\n              axisLine: {\n                  show: false,\n              },\n          }],\n          series: [{\n              name: '飞机场',\n              type: 'bar',\n              data: res.data.plane,\n              barWidth: 15,\n              barGap: 1,\n          }, {\n              name: '火车站',\n              type: 'bar',\n              data: res.data.train,\n              barWidth: 15,\n              barGap: 1,\n          }, {\n              name: '高铁站',\n              type: 'bar',\n              data: res.data.gaotie,\n              barWidth: 15,\n              barGap: 1,\n          }]\n        },\n        pieData: {\n          title: {\n            text: `单日类型分析饼状图`\n          },\n          tooltip: {\n              trigger: 'item',\n              formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n          },\n          series: [{\n              name: '占比情况',\n              type: 'pie',\n              radius: '68%',\n              center: ['50%', '50%'],\n              clockwise: false,\n              data: data,\n              label: {\n                  normal: {\n                      textStyle: {\n                          color: '#999',\n                          fontSize: 14,\n                      }\n                  }\n              },\n              labelLine: {\n                  normal: {\n                      show: false\n                  }\n              },\n              itemStyle: {\n                  normal: {\n                      borderWidth: 4,\n                      borderColor: '#ffffff',\n                  },\n                  emphasis: {\n                      borderWidth: 0,\n                      shadowBlur: 10,\n                      shadowOffsetX: 0,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                  }\n              }\n          }],\n          color: [\n              '#00acee',\n              '#52cdd5',\n              '#79d9f1',\n              '#a7e7ff',\n              '#c8efff'\n          ],\n          backgroundColor: '#fff'\n      }\n      })\n    });\n  }\n  getTableData = (page: any, mobile?: any) => {\n    fetch(`http://xuncs.cn:2827/back/table?date=${this.state.selectDate}&page=${page}&size=20&mobile=${mobile}`)\n    .then(res => res.json())\n    .then((res: any) => {\n      this.setState({\n        tableList: res.data.data || [],\n        pageSet: {...res.data.pageSet, showTotal: (total: any) => <span>共{total}条</span> }\n      })\n    })\n  }\n  handleChange = (event: any) => {\n    this.setState({\n      selectDate: event.target.value\n    });\n    this.getOption(event.target.value);\n    this.getTableData(1);\n  };\n  getColumnSearchProps = (dataIndex: any) => ({\n    filterDropdown: ({\n      setSelectedKeys, selectedKeys, confirm, clearFilters,\n    }: any) => (\n      <div className=\"custom-filter-dropdown\">\n        <Input\n          ref={node => { this.searchInput = node; }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          查询\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          清空\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered: any) => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value: any, record: any) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible: any) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text: any) => (\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[this.state.searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n    ),\n  })\n  handleSearch = (selectedKeys: any, confirm: any) => {\n    console.log(selectedKeys);\n    confirm();\n    this.getTableData(1, selectedKeys[0]);\n    this.setState({ searchText: selectedKeys[0] });\n  }\n  handleReset = (clearFilters: any) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n    this.getTableData(1);\n  }\n  render() {\n    const TableColumns = [\n      {\n        title: '序号',\n        dataIndex: 'id',\n        key: 'id',\n        fixed: 'left',\n      }, {\n        title: '姓名',\n        dataIndex: 'userName',\n        key: 'userName',\n      }, {\n        title: '手机号',\n        dataIndex: 'mobile',\n        key: 'mobile',\n        ...this.getColumnSearchProps('mobile'),\n      }, {\n        title: '学号',\n        dataIndex: 'stuId',\n        key: 'stuId',\n      }, {\n        title: '终点站',\n        dataIndex: 'route',\n        key: 'route',\n        render: (text: string) => <span>{routeRadiosData.filter(itm => itm.value === text)[0].key}</span>,\n      }, {\n        title: '时间',\n        dataIndex: 'startDate',\n        key: 'startDate',\n        render: (text: string, itm: any) => <span>{text} {itm.startTime}</span>,\n      }\n    ];\n    return (\n      <>\n        <p style={{textAlign: \"center\", fontSize: 24, paddingTop: 64}}>西电寒假送站校车预约助手</p>\n        <Row>\n          <Col xs={24} sm={24}>\n            <div style={{paddingBottom: 24}}>\n              选择日期：\n              <Select\n                value={this.state.selectDate}\n                onChange={this.handleChange}\n              >\n                {this.state.selectDateOptions.map((itm: any) => (\n                  <MenuItem value={itm}>{itm}</MenuItem>\n                ))}\n              </Select>\n            </div>\n          </Col>\n          <Col xs={24} sm={12}>\n            <ReactEcharts\n              style={{ background: '#fff', paddingTop: 12}}\n              option={this.state.histogramData}\n              notMerge={true}\n              lazyUpdate={true}\n            />\n          </Col>\n          <Col xs={24} sm={12}>\n            <ReactEcharts\n              style={{ background: '#fff', paddingTop: 12}}\n              option={this.state.pieData}\n              notMerge={true}\n              lazyUpdate={true}\n            />\n          </Col>\n          <Col span={24}>\n            <Table\n              style={{width: '100%'}}\n              scroll={{ x: 700 }}\n              dataSource={this.state.tableList}\n              columns={TableColumns}\n              pagination={this.state.pageSet}\n              onChange={(pageSet) => this.getTableData(pageSet.current)}\n            />\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n"],"mappings":"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","sourceRoot":""}