{"version":3,"file":"static/webpack/static/development/pages/index.js.6026f562d5c25a77e4d2.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from  '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nexport default class BackPage extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      selectDateOptions: [],\n      histogramData: {},\n      pieData: {},\n      selectDate: ''\n    }\n  }\n  componentDidMount() {\n    fetch('http://localhost:2827/back/times')\n    .then(res => res.json())\n    .then((res: any) => {\n      console.log(res);\n      let options: string = [];\n      res.data.map((itm: any) => {\n        options.push(itm.date);\n      })\n      this.setState({selectDateOptions: options, selectDate: options[0]});\n      this.getOption(options[0]);\n    })\n  }\n  getOption (date: string) {\n    fetch(`http://localhost:2827/back/data/${date}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then(res => res.json())\n    .then(res => {\n      console.log(res);\n      let data = [\n        {name: '飞机场', value: res.data.plane.reduce((prev: number, curr: number) => prev + curr)},\n        {name: '火车站', value: res.data.train.reduce((prev: number, curr: number) => prev + curr)},\n        {name: '高铁站', value: res.data.gaotie.reduce((prev: number, curr: number) => prev + curr)}\n      ];\n      this.setState({\n        histogramData: {\n          backgroundColor: '#fff',\n          tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                  type: 'shadow'\n              }\n          },\n          legend: {\n              data: ['飞机场', '火车站', '高铁站'],\n              align: 'right',\n              right: 10,\n              textStyle: {\n                  color: \"#00265f\"\n              },\n              itemWidth: 10,\n              itemHeight: 10,\n              itemGap: 35\n          },\n          grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n          },\n          xAxis: [{\n              type: 'category',\n              data: res.data.times,\n              axisLine: {\n                  show: true,\n              },\n              axisTick: {\n                  show: false,\n              },\n              axisLabel: {\n                  show: true\n              },\n          }],\n          yAxis: [{\n              type: 'value',\n              axisLabel: {\n                  formatter: '{value}'\n              },\n              axisTick: {\n                  show: false,\n              },\n              axisLine: {\n                  show: false,\n              },\n          }],\n          series: [{\n              name: '飞机场',\n              type: 'bar',\n              data: res.data.plane,\n              barWidth: 15,\n              barGap: 1,\n          }, {\n              name: '火车站',\n              type: 'bar',\n              data: res.data.train,\n              barWidth: 15,\n              barGap: 1,\n          }, {\n              name: '高铁站',\n              type: 'bar',\n              data: res.data.gaotie,\n              barWidth: 15,\n              barGap: 1,\n          }]\n        },\n        pieData: {\n          tooltip: {\n              trigger: 'item',\n              formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n          },\n          series: [{\n              name: '占比情况',\n              type: 'pie',\n              radius: '68%',\n              center: ['50%', '50%'],\n              clockwise: false,\n              data: data,\n              label: {\n                  normal: {\n                      textStyle: {\n                          color: '#999',\n                          fontSize: 14,\n                      }\n                  }\n              },\n              labelLine: {\n                  normal: {\n                      show: false\n                  }\n              },\n              itemStyle: {\n                  normal: {\n                      borderWidth: 4,\n                      borderColor: '#ffffff',\n                  },\n                  emphasis: {\n                      borderWidth: 0,\n                      shadowBlur: 10,\n                      shadowOffsetX: 0,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                  }\n              }\n          }],\n          color: [\n              '#00acee',\n              '#52cdd5',\n              '#79d9f1',\n              '#a7e7ff',\n              '#c8efff'\n          ],\n          backgroundColor: '#fff'\n      }\n      })\n    });\n  }\n\n  handleChange = (event: any) => {\n    this.setState({\n      selectDate: event.target.value\n    });\n    this.getOption(event.target.value);\n  };\n  render() {\n    return (\n      <>\n        <Grid container spacing={24}>\n          <Grid item xs={6}>\n            <div>\n              选择日期：\n              <Select\n                value={this.state.selectDate}\n                onChange={this.handleChange}\n              >\n                {this.state.selectDateOptions.map((itm: any) => (\n                  <MenuItem value={itm}>{itm}</MenuItem>\n                ))}\n              </Select>\n            </div>\n            <ReactEcharts\n              style={{ background: '#fff', paddingTop: 12}}\n              option={this.state.histogramData}\n              notMerge={true}\n              lazyUpdate={true}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <ReactEcharts\n              style={{ background: '#fff', paddingTop: 12}}\n              option={this.state.pieData}\n              notMerge={true}\n              lazyUpdate={true}\n            />\n          </Grid>\n        </Grid>\n        <Paper >\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Dessert (100g serving)</TableCell>\n                <TableCell align=\"right\">Calories</TableCell>\n                <TableCell align=\"right\">Fat (g)</TableCell>\n                <TableCell align=\"right\">Carbs (g)</TableCell>\n                <TableCell align=\"right\">Protein (g)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => {\n                return (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.calories}</TableCell>\n                    <TableCell align=\"right\">{row.fat}</TableCell>\n                    <TableCell align=\"right\">{row.carbs}</TableCell>\n                    <TableCell align=\"right\">{row.protein}</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n      </>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgKA;AACA;AADA;AACA;AAEA;AACA;AACA;AAnKA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AA9DA;AAsEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AAQA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AALA;AApBA;AAiCA;AAOA;AA7CA;AAvEA;AAupOA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}